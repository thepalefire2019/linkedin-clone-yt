import Head from 'next/head'
import Header from '../../components/Header'
import { getSession, useSession } from "next-auth/react";
import { useRouter } from "next/router";
import Link from 'next/link';
import { connectToDatabase } from '../../util/mongodb';

export default function Home({users}) {
  // console.log(articles)
  const { data: session } = useSession();
  const router = useRouter();
  const { status } = useSession({
    required: true,
    onUnauthenticated() {
      // The user is not authenticated, handle it here.
      router.push("/home");
    },
  });
  return (
    <div className="bg-[#F3F2EF] dark:bg-black dark:text-white h-screen overflow-y-scroll md:space-y-6">
      <Head>
        <title>Feed | Linkedin</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Header />
      <div className="py-10 h-screen bg-gray-300 px-2">
        <div className="max-w-md mx-auto bg-gray-100 shadow-lg rounded-lg overflow-hidden md:max-w-lg">
          <div className="md:flex">
            <div className="w-full p-4">
							<div className="relative">
								<input type="text" className="w-full h-12 rounded focus:outline-none px-3 focus:shadow-md" placeholder="Search..." />
								<i className="fa fa-search absolute right-3 top-4 text-gray-300"></i> 
							</div>
							<ul>
              {users.map((user, idx) => {
                return(
                  <>
                  {user.email != session.user.email && (
                    <Link href={`chat/${user.email}`} key={user._id}>
                      <a>
                        <li className="flex justify-between items-center bg-white mt-2 p-2 hover:shadow-lg rounded cursor-pointer transition">
                          <div className="flex ml-2"> 
                            <img src={user.image} width="40" height="40" className="rounded-full" />
                            <div className="flex flex-col ml-2"> 
                              <span className="font-medium text-black">{user.email}</span>
                              <span className="text-sm text-gray-400 truncate w-32">
                                Hey, user, chat with me
                              </span>
                            </div>
                          </div>
                          <div className="flex flex-col items-center"> <span className="text-gray-300">11:26</span> <i className="fa fa-star text-green-400"></i> </div>
                        </li>
                      </a>
                    </Link>
                  )}
                    
                  </>
                );
              })}
								
							</ul>
						</div>
          </div>
        </div>
      </div>
    </div>
  )
}

export async function getServerSideProps(context) {
  // const email = context.params.email;
  const { db } = await connectToDatabase();
  const users = await db
    .collection("users")
    .find()
    .sort({ timestamp: -1 })
    .toArray();
  return {
    props: {
      users: users.map((user) => ({
        _id: user._id.toString(),
        name: user.name,
        email: user.email,
        image: user.image,
      })),
    }, // will be passed to the page component as props
  }
}
